image: erlendum/golang-dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:dind

stages: 
  - pre
  - image
  - linter
  - module_build
  - test
  - build
  - extra

# image-job:
#   stage: image
#   script:
#     - echo "docker up"
#   needs:
#     - linter-job

linter-job:
  stage: linter
  image: golangci/golangci-lint:v1.52.2
  script:
    - cd backend
    - go mod tidy
    - golangci-lint run -E dupl,errname,goconst,gofumpt,goimports --timeout 5m0s --fix >> linter_console.txt
    # - cd ../consoleApp
    # - golangci-lint run >> linter_console.txt
  artifacts:
    paths:
      - backend/linter_server.txt
  #     # - consoleApp/linter_console.txt
    expire_in: 1 day

module-build-job:      
  stage: module_build
  script:
      - cd backend 
      - go mod tidy

bl-unit-test-job:  
  stage: test   
  script:
    - cd backend 
    - go mod tidy
    - cd internal/services/implementation
    - go test client_test.go client.go -v -cover -coverprofile=client.out
    - go test record.go record_test.go -v -cover -coverprofile=record.out
    - go test pet_test.go pet.go -v -cover -coverprofile=pet.out
    - go test doctor.go doctor_test.go -v -cover  -coverprofile=doctor.out
  artifacts:
    paths:
      - backend/internal/services/implementation/client.out
      - backend/internal/services/implementation/record.out
      - backend/internal/services/implementation/pet.out
      - backend/internal/services/implementation/doctor.out
    expire_in: 1 hour
  needs:
    - module-build-job

db-unit-test-job:  
  stage: test   
  script:
    - cd backend 
    - go mod tidy
    - cd internal/services/implementation
    - go test -v -cover -coverprofile=DB.out
  artifacts:
    paths:
      - backend/internal/services/implementation/unitDB.out
    expire_in: 1 hour
  needs:
    - module-build-job


bl-db-test-job:  
  stage: test   
  script:
    - cd backend 
    - go mod tidy
    - cd internal/services/implementation
    - go test recordPostgres_test.go record.go record_test.go config_for_test.go -v -cover -coverprofile=recordDB.out
    - go test petPostgres_test.go pet.go pet_test.go config_for_test.go -v -cover -coverprofile=petDB.out
  artifacts:
    paths:
      - backend/internal/services/implementation/recordDB.out
      - backend/internal/services/implementation/petDB.out
    expire_in: 1 hour
  needs:
    - module-build-job
    - bl-unit-test-job
    - db-unit-test-job


build-job:    
  stage: build
  script:
    - cd backend 
    - go mod tidy
    - cd cmd
    - go build main.go
  artifacts:
    paths:
      - backend/cmd/main
    expire_in: 1 hour
  needs:
    - bl-unit-test-job
    - db-unit-test-job
    - bl-db-test-job



# research-job:   # This job runs in the test stage.
#   stage: extra    # It only starts when the job in the build stage completes successfully.
#   script:
#     - echo "Running unit tests..."
#   when: manual
#   needs:
#    - build-job

# documentation-job:   # This job runs in the test stage.
#   stage: extra    # It only starts when the job in the build stage completes successfully.
#   script:
#     - echo "Running unit tests..."
#   when: manual
#   needs:
#     - build-job

